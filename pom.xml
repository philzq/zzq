<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>zzq</groupId>
    <artifactId>zzq</artifactId>
    <version>${revision}</version>

    <modules>
        <module>spring-boot</module>
        <module>spring-cloud</module>
        <module>zzq-micro-service</module>
        <module>zzq-web</module>
        <module>zzq-simple-framework</module>
        <module>zzq-demo</module>
        <module>zzq-plugins</module>
    </modules>
    <packaging>pom</packaging>
    <name>zzq</name>
    <description>zzq project for Spring Boot</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.8.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <revision>0.0.1-SNAPSHOT</revision>
        <java.version>11</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <mysql-connector-java.version>8.0.28</mysql-connector-java.version>
        <spring-cloud.version>Greenwich.SR3</spring-cloud.version>
        <springfox-swagger2-version>2.9.2</springfox-swagger2-version>
        <mybatis-plus-boot-starter.version>3.0.5</mybatis-plus-boot-starter.version>
        <spring-boot-admin.version>2.1.0</spring-boot-admin.version>
        <hikari-cp.version>2.6.0</hikari-cp.version>
        <mybatis-spring-boot-starter.version>1.3.2</mybatis-spring-boot-starter.version>
        <hutool.version>4.3.1</hutool.version>
        <velocity.version>1.7</velocity.version>
        <commons.codec.version>1.10</commons.codec.version>
        <commons.configuration.version>1.10</commons.configuration.version>
        <commons.io.version>2.5</commons.io.version>
        <dom4j.version>1.6.1</dom4j.version>
        <mariadb-java-client.version>2.5.1</mariadb-java-client.version>
        <commons-lang3.version>3.9</commons-lang3.version>
        <commons-collections4.version>4.4</commons-collections4.version>
        <tess4j.version>4.4.1</tess4j.version>
        <jacoco.version>0.8.5</jacoco.version>
        <jmockit.version>1.49</jmockit.version>
        <jmockit-auto-ut-maven-plugin.version>0.0.1-SNAPSHOT</jmockit-auto-ut-maven-plugin.version>
        <flatten-maven-plugin.version>1.2.2</flatten-maven-plugin.version>
        <transmittable-thread-local.vewsion>2.12.1</transmittable-thread-local.vewsion>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>transmittable-thread-local</artifactId>
                <version>${transmittable-thread-local.vewsion}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-dependencies</artifactId>
                <version>${spring-boot-admin.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- mybatis-plus begin -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus-boot-starter.version}</version>
            </dependency>
            <!--轻巧项目不用mybatis-plus，用mybatis-spring-boot-->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis-spring-boot-starter.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.velocity</groupId>
                <artifactId>velocity</artifactId>
                <version>${velocity.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-configuration</groupId>
                <artifactId>commons-configuration</artifactId>
                <version>${commons.configuration.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commons.codec.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons.io.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/net.sourceforge.tess4j/tess4j -->
            <dependency>
                <groupId>net.sourceforge.tess4j</groupId>
                <artifactId>tess4j</artifactId>
                <version>${tess4j.version}</version>
            </dependency>

            <dependency>
                <groupId>zzq</groupId>
                <artifactId>zzq-common</artifactId>
                <version>${revision}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!--spring cloud-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>de.codecentric</groupId>
            <artifactId>spring-boot-admin-starter-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
        </dependency>
        <!--mysql-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql-connector-java.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client -->
        <dependency>
            <groupId>org.mariadb.jdbc</groupId>
            <artifactId>mariadb-java-client</artifactId>
            <version>${mariadb-java-client.version}</version>
        </dependency>

        <!--连接池-->
        <!-- https://mvnrepository.com/artifact/hikari-cp/hikari-cp -->
        <dependency>
            <groupId>hikari-cp</groupId>
            <artifactId>hikari-cp</artifactId>
            <version>${hikari-cp.version}</version>
        </dependency>
        <!--swagger2-->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${springfox-swagger2-version}</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${springfox-swagger2-version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/cn.hutool/hutool-all -->
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>${hutool.version}</version>
        </dependency>

        <!-- 读取xml文件 -->
        <dependency>
            <groupId>dom4j</groupId>
            <artifactId>dom4j</artifactId>
            <version>${dom4j.version}</version>
        </dependency>

        <!-- 通用工具包 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-collections4 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>${commons-collections4.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jmockit</groupId>
            <artifactId>jmockit</artifactId>
            <version>${jmockit.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <repositories>
        <repository>
            <id>aliyunPublic</id>
            <name>aliyunPublic</name>
            <url>https://maven.aliyun.com/repository/public</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>

        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <build>
        <pluginManagement>
            <plugins>
                <!--=====================================================================-->
                <!--============================== 打包相关 =================================-->
                <!--=====================================================================-->
                <!--      Step 1: 编译完成后改manifest及排除配置等文件      -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <configuration>
                        <excludes>
                            <exclude>application**</exclude>
                            <exclude>**/mybatis-generator.xml</exclude>
                            <exclude>/lib/</exclude>
                        </excludes>
                        <archive>
                            <manifest>
                                <addClasspath>true</addClasspath>
                                <!-- MANIFEST.MF 中 Class-Path 加入前缀 -->
                                <classpathPrefix>lib/</classpathPrefix>
                                <!-- jar包不包含唯一版本标识 -->
                                <useUniqueVersions>false</useUniqueVersions>
                            </manifest>
                        </archive>
                        <outputDirectory>${project.build.directory}</outputDirectory>
                    </configuration>
                </plugin>

                <!--      Step 2: springboot重新打包下，加上自己的东西      -->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>================gen spring boot jar================</id>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <layout>ZIP</layout>
                        <addResources>true</addResources>
                        <includes>
                            <include>
                                <groupId>*</groupId>
                                <artifactId>*</artifactId>
                            </include>
                        </includes>
                        <outputDirectory>${project.build.directory}/${project.name}</outputDirectory>
                    </configuration>
                </plugin>

                <!--      Step 3: 复制依赖的jar  到目标路径：lib    -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>================copy-dependencies================</id>
                            <phase>package</phase>
                            <goals>
                                <goal>copy-dependencies</goal>
                            </goals>
                            <configuration>
                                <!--多个可以用“,”隔开-->
                                <outputDirectory>${project.build.directory}/${project.name}/lib/</outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!--      Step 4: 复制各种资源文件 到目标路径：resource/lib、config      -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>================copy-resources================</id>
                            <phase>package</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <resources>
                                    <resource>
                                        <directory>src/main/resources</directory>
                                        <targetPath>${project.build.directory}/${project.name}/config</targetPath>
                                        <includes>
                                            <include>application**</include>
                                        </includes>
                                    </resource>
                                </resources>
                                <outputDirectory>${project.build.directory}/resources</outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <configuration>
                        <testFailureIgnore>true</testFailureIgnore>
                        <argLine>
                            -javaagent:${settings.localRepository}/org/jmockit/jmockit/${jmockit.version}/jmockit-${jmockit.version}.jar
                            -javaagent:${settings.localRepository}/org/jacoco/org.jacoco.agent/${jacoco.version}/org.jacoco.agent-${jacoco.version}-runtime.jar=destfile=${project.build.directory}/jacoco.exec
                        </argLine>
                    </configuration>
                </plugin>

                <!--jacoco 单元测试覆盖率-->
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco.version}</version>
                    <executions>
                        <execution>
                            <id>prepare-agent</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>report</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>zzq-plugins</groupId>
                    <artifactId>jmockit-auto-ut-maven-plugin</artifactId>
                    <version>${jmockit-auto-ut-maven-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>${flatten-maven-plugin.version}</version>
                <inherited>true</inherited>
                <executions>
                    <execution>
                        <!-- Flatten and simplify our own POM for install/deploy -->
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                        <configuration>
                            <updatePomFile>true</updatePomFile>
                            <pomElements>
                                <parent>expand</parent>
                                <name>keep</name>
                                <description>keep</description>
                                <url>expand</url>
                                <properties>keep</properties>
                                <pluginManagement>keep</pluginManagement>
                                <dependencyManagement>keep</dependencyManagement>
                                <build>keep</build>
                            </pomElements>
                        </configuration>
                    </execution>
                    <execution>
                        <id>flatten-clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>


</project>
